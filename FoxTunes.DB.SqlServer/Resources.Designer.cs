//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FoxTunes {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FoxTunes.DB.SqlServer.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH 
        ///&quot;MetaDataItems_Lookup&quot; AS
        ///(
        ///	SELECT *
        ///	FROM &quot;MetaDataItems&quot; 
        ///	WHERE &quot;Name&quot; = @name AND &quot;Type&quot; = @type
        ///		AND ((&quot;NumericValue&quot; IS NULL AND @numericValue IS NULL) OR &quot;NumericValue&quot; = @numericValue)
        ///		AND ((&quot;TextValue&quot; IS NULL AND @textValue IS NULL) OR &quot;TextValue&quot; = @textValue) 
        ///		AND ((&quot;FileValue&quot; IS NULL AND @fileValue IS NULL) OR &quot;FileValue&quot; = @fileValue)
        ///)
        ///
        ///INSERT INTO &quot;MetaDataItems&quot; (&quot;Name&quot;, &quot;Type&quot;, &quot;NumericValue&quot;, &quot;TextValue&quot;, &quot;FileValue&quot;) 
        ///SELECT @name, @type, @numericValue, @textValu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddLibraryMetaDataItems {
            get {
                return ResourceManager.GetString("AddLibraryMetaDataItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM &quot;LibraryHierarchyLevelLeaf&quot;;
        ///
        ///INSERT INTO &quot;LibraryHierarchyLevelLeaf&quot; (&quot;LibraryHierarchy_Id&quot;, &quot;LibraryHierarchyLevel_Id&quot;)
        ///SELECT &quot;LibraryHierarchyLevels&quot;.&quot;LibraryHierarchy_Id&quot;, &quot;LibraryHierarchyLevels&quot;.&quot;Id&quot;
        ///FROM &quot;LibraryHierarchyLevels&quot;
        ///JOIN 
        ///(
        ///	SELECT &quot;LibraryHierarchy_Id&quot;, MAX(&quot;Sequence&quot;) AS &quot;Sequence&quot;
        ///	FROM &quot;LibraryHierarchyLevels&quot;
        ///	GROUP BY &quot;LibraryHierarchy_Id&quot;
        ///) AS &quot;Leaves&quot; 
        ///	ON &quot;LibraryHierarchyLevels&quot;.&quot;LibraryHierarchy_Id&quot; = &quot;Leaves&quot;.&quot;LibraryHierarchy_Id&quot;
        ///		AND &quot;LibraryHierar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BeginBuildLibraryHierarchies {
            get {
                return ResourceManager.GetString("BeginBuildLibraryHierarchies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM &quot;PlaylistSort&quot;;
        ///DELETE FROM &quot;PlaylistSequence&quot;;.
        /// </summary>
        internal static string BeginSequencePlaylistItems {
            get {
                return ResourceManager.GetString("BeginSequencePlaylistItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE [MetaDataItems](
        ///    [Id] INTEGER IDENTITY(1,1) PRIMARY KEY NOT NULL, 
        ///    [Name] nvarchar(250) NOT NULL, 
        ///	[Type] INTEGER NOT NULL,
        ///    [NumericValue] INTEGER, 
        ///    [TextValue] nvarchar(250), 
        ///    [FileValue] nvarchar(250));
        ///
        ///CREATE TABLE LibraryItems (
        ///	Id INTEGER IDENTITY(1,1) PRIMARY KEY NOT NULL, 
        ///	DirectoryName nvarchar(250) NOT NULL, 
        ///	FileName nvarchar(250) NOT NULL, 
        ///	Status INTEGER NOT NULL);
        ///
        ///CREATE TABLE [PlaylistItems](
        ///    [Id] INTEGER IDENTITY(1,1) PRIMARY KEY NOT NULL, 
        ///	[Librar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Database {
            get {
                return ResourceManager.GetString("Database", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE &quot;PlaylistItems&quot;
        ///SET &quot;Sequence&quot; = &quot;Sequence&quot; + (&quot;RowNumber&quot; - 1)
        ///FROM
        ///(
        ///	SELECT &quot;PlaylistItems&quot;.*, ROW_NUMBER() OVER (ORDER BY &quot;PlaylistSort&quot;.&quot;Value1&quot;, &quot;PlaylistSort&quot;.&quot;Value2&quot;, &quot;PlaylistSort&quot;.&quot;Value3&quot;, &quot;PlaylistSort&quot;.&quot;Value4&quot;, &quot;PlaylistSort&quot;.&quot;Value5&quot;, &quot;PlaylistSort&quot;.&quot;Value6&quot;, &quot;PlaylistSort&quot;.&quot;Value7&quot;, &quot;PlaylistSort&quot;.&quot;Value8&quot;, &quot;PlaylistSort&quot;.&quot;Value9&quot;, &quot;PlaylistSort&quot;.&quot;Value10&quot;) AS &quot;RowNumber&quot;
        ///	FROM &quot;PlaylistItems&quot;
        ///		JOIN &quot;PlaylistSort&quot; ON &quot;PlaylistItems&quot;.&quot;Id&quot; = &quot;PlaylistSort&quot;.&quot;PlaylistItem_Id&quot;
        ///	WH [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EndSequencePlaylistItems {
            get {
                return ResourceManager.GetString("EndSequencePlaylistItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 5 &quot;MetaDataItems&quot;.&quot;NumericValue&quot;,  &quot;MetaDataItems&quot;.&quot;TextValue&quot;, &quot;MetaDataItems&quot;.&quot;FileValue&quot;
        ///FROM &quot;LibraryHierarchyItems&quot;
        ///	JOIN &quot;LibraryHierarchyItem_LibraryItem&quot; ON &quot;LibraryHierarchyItems&quot;.&quot;Id&quot; = &quot;LibraryHierarchyItem_LibraryItem&quot;.&quot;LibraryHierarchyItem_Id&quot;
        ///	JOIN &quot;LibraryItem_MetaDataItem&quot; ON &quot;LibraryHierarchyItem_LibraryItem&quot;.&quot;LibraryItem_Id&quot; = &quot;LibraryItem_MetaDataItem&quot;.&quot;LibraryItem_Id&quot;
        ///	JOIN &quot;MetaDataItems&quot; ON &quot;MetaDataItems&quot;.&quot;Id&quot; = &quot;LibraryItem_MetaDataItem&quot;.&quot;MetaDataItem_Id&quot;
        ///WHERE &quot;Libra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetLibraryHierarchyMetaData {
            get {
                return ResourceManager.GetString("GetLibraryHierarchyMetaData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH 
        ///
        ///LibraryHierarchyParent
        ///AS
        ///(
        ///	SELECT &quot;LibraryHierarchyItems&quot;.&quot;Id&quot;, &quot;LibraryHierarchyItem_Parent&quot;.&quot;LibraryHierarchyItem_Parent_Id&quot; AS &quot;Parent_Id&quot;, &quot;Value&quot;
        ///	FROM &quot;LibraryHierarchyItems&quot;
        ///		LEFT JOIN &quot;LibraryHierarchyItem_Parent&quot;
        ///			ON &quot;LibraryHierarchyItem_Parent&quot;.&quot;LibraryHierarchyItem_Id&quot; = &quot;LibraryHierarchyItems&quot;.&quot;Id&quot;
        ///	WHERE &quot;LibraryHierarchy_Id&quot; = @libraryHierarchyId
        ///),
        ///
        ///LibraryHierarchyParents(&quot;Root&quot;, &quot;Id&quot;, &quot;Parent_Id&quot;, &quot;Value&quot;)
        ///AS
        ///(
        ///	SELECT LibraryHierarchyParent.&quot;Id&quot;, LibraryHierarch [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetLibraryHierarchyNodesWithFilter {
            get {
                return ResourceManager.GetString("GetLibraryHierarchyNodesWithFilter", resourceCulture);
            }
        }
    }
}
