<UserControl x:Class="FoxTunes.SettingsDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Core="clr-namespace:FoxTunes;assembly=FoxTunes.Core" 
             xmlns:Windows="clr-namespace:FoxTunes" 
             xmlns:ViewModel="clr-namespace:FoxTunes.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance Core:Core}">
    <UserControl.Resources>
        <ViewModel:Settings x:Key="ViewModel" Core="{Binding}"></ViewModel:Settings>
        <ViewModel:HasFlagConverter x:Key="HasFlagConverter"></ViewModel:HasFlagConverter>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <GroupBox Grid.Row="0" Header="Components" Padding="0,7,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TreeView 
                        ItemsSource="{Binding Sections, Source={StaticResource ViewModel}}" 
                        Windows:TreeViewExtensions.SelectedItem="{Binding SelectedSection, Source={StaticResource ViewModel}}"
                        Windows:TreeViewExtensions.RightButtonSelect="True">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <Setter Property="TreeViewItem.IsSelected" Value="{Binding IsSelected}"></Setter>
                            <Setter Property="TreeViewItem.IsExpanded" Value="{Binding IsExpanded}"></Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Name, Mode=OneWay}" Foreground="{DynamicResource TextBrush}"/>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
                <ScrollViewer Grid.Column="1" Grid.IsSharedSizeScope="True" VerticalScrollBarVisibility="Auto">
                    <ItemsControl ItemsSource="{Binding SelectedSection.Elements, Source={StaticResource ViewModel}}">
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="{x:Type ContentPresenter}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Name" Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="{Binding Name}" ContentStringFormat="{}{0}:"></Label>
                                    <ContentControl Grid.Column="1" Content="{Binding}">
                                        <ContentControl.Resources>
                                            <DataTemplate DataType="{x:Type Core:SelectionConfigurationElement}">
                                                <ComboBox ItemsSource="{Binding Options}" SelectedValue="{Binding Value}" DisplayMemberPath="Name"></ComboBox>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type Core:BooleanConfigurationElement}">
                                                <CheckBox VerticalAlignment="Center" IsChecked="{Binding Value}"></CheckBox>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type Core:ConfigurationElement}">
                                                <TextBox>
                                                    <TextBox.Resources>
                                                        <ViewModel:Wrapper x:Key="Proxy" Value="{Binding}"></ViewModel:Wrapper>
                                                    </TextBox.Resources>
                                                    <TextBox.Text>
                                                        <Binding Path="Value" UpdateSourceTrigger="LostFocus">
                                                            <Binding.ValidationRules>
                                                                <ViewModel:ValidationRule>
                                                                    <ViewModel:ValidationRule.ConfigurationElement>
                                                                        <ViewModel:Wrapper Value="{Binding Value, Source={StaticResource Proxy}}"></ViewModel:Wrapper>
                                                                    </ViewModel:ValidationRule.ConfigurationElement>
                                                                </ViewModel:ValidationRule>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox.Text>
                                                    <TextBox.Style>
                                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                                            <!-- System -->
                                                            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                            <Setter Property="AllowDrop" Value="true" />
                                                            <Setter Property="Template" Value="{DynamicResource TextBoxTemplate}" />
                                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                                                            <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Flags, Converter={StaticResource HasFlagConverter}, ConverterParameter={x:Static Core:ConfigurationElementFlags.MultiLine}}" Value="True">
                                                                    <Setter Property="AcceptsReturn" Value="True"></Setter>
                                                                    <Setter Property="AcceptsTab" Value="True"></Setter>
                                                                    <Setter Property="SpellCheck.IsEnabled" Value="False"></Setter>
                                                                    <Setter Property="MinLines" Value="10"></Setter>
                                                                    <Setter Property="MaxLines" Value="10"></Setter>
                                                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"></Setter>
                                                                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"></Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </DataTemplate>
                                        </ContentControl.Resources>
                                    </ContentControl>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left">
            <Button Width="70" Height="30" Margin="0,7,0,0" Command="{Binding ResetAllCommand, Mode=OneWay, Source={StaticResource ViewModel}}">Reset All</Button>
            <Button Width="70" Height="30" Margin="7,7,0,0" Command="{Binding ResetPageCommand, Mode=OneWay, Source={StaticResource ViewModel}}">Reset Page</Button>
        </StackPanel>
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Width="70" Height="30" Margin="0,7,0,0" Command="{Binding SaveCommand, Mode=OneWay, Source={StaticResource ViewModel}}">Save</Button>
        </StackPanel>
    </Grid>
</UserControl>
