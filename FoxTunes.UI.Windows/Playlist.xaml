<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Core="clr-namespace:FoxTunes;assembly=FoxTunes.Core" 
             xmlns:Windows="clr-namespace:FoxTunes"
             xmlns:ViewModel="clr-namespace:FoxTunes.ViewModel"
             xmlns:Extensions="clr-namespace:FoxTunes.Extensions"
             xmlns:Interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:System="clr-namespace:System;assembly=mscorlib" 
             xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             x:Class="FoxTunes.Playlist" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance {x:Type Core:Core}, IsDesignTimeCreatable=False}" AllowDrop="True">
    <UserControl.Resources>
        <ViewModel:Playlist x:Key="ViewModel" Core="{Binding}" AutoSizeGridColumns="True"></ViewModel:Playlist>
        <ViewModel:Menu x:Key="Menu" Core="{Binding}"></ViewModel:Menu>
        <CollectionViewSource x:Key="PlaylistItems" Source="{Binding Components.Database.Sets.PlaylistItem}" IsLiveSortingRequested="True">
            <CollectionViewSource.LiveGroupingProperties>
                <System:String>Sequence</System:String>
            </CollectionViewSource.LiveGroupingProperties>
            <CollectionViewSource.SortDescriptions>
                <ComponentModel:SortDescription PropertyName="Sequence"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>
    <Interactivity:Interaction.Triggers>
        <Interactivity:EventTrigger EventName="DragEnter">
            <ViewModel:InvokeParameterizedCommandAction Command="{Binding DragEnterCommand, Source={StaticResource ViewModel}}" />
        </Interactivity:EventTrigger>
        <Interactivity:EventTrigger EventName="Drop">
            <ViewModel:InvokeParameterizedCommandAction Command="{Binding DropCommand, Source={StaticResource ViewModel}}" />
        </Interactivity:EventTrigger>
    </Interactivity:Interaction.Triggers>
    <Grid>
        <ListView ItemsSource="{Binding Mode=OneWay, Source={StaticResource PlaylistItems}}" 
                  Extensions:ListViewExtensions.SelectedItems="{Binding SelectedItems, Source={StaticResource ViewModel}}"
                  Extensions:ListViewExtensions.DropInsert="True"
                  Extensions:ListViewExtensions.DropInsertActive="{Binding InsertActive, Source={StaticResource ViewModel}}"
                  Extensions:ListViewExtensions.DropInsertIndex="{Binding InsertIndex, Source={StaticResource ViewModel}}"
                  Extensions:ListViewExtensions.DropInsertOffset="{Binding InsertOffset, Source={StaticResource ViewModel}}">
            <Extensions:ListViewExtensions.DropInsertPen>
                <Pen Brush="{DynamicResource TextBrush}" Thickness="3"/>
            </Extensions:ListViewExtensions.DropInsertPen>
            <Interactivity:Interaction.Triggers>
                <Interactivity:EventTrigger EventName="MouseDoubleClick">
                    <Interactivity:InvokeCommandAction Command="{Binding PlaySelectedItemCommand, Source={StaticResource ViewModel}}"/>
                </Interactivity:EventTrigger>
            </Interactivity:Interaction.Triggers>
            <ListView.ContextMenu>
                <ContextMenu ItemsSource="{Binding Items, Source={StaticResource Menu}}">
                    <ContextMenu.Resources>
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Separator></Separator>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Header" Value="{Binding Invocation.Name}"></Setter>
                            <Setter Property="Command" Value="{Binding Command}"></Setter>
                        </Style>
                    </ContextMenu.Resources>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView Extensions:GridViewExtensions.ColumnsSource="{Binding GridColumns, Source={StaticResource ViewModel}}">
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Settings" Command="{Binding SettingsCommand, Mode=OneWay, Source={StaticResource ViewModel}}"></MenuItem>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                </GridView>
            </ListView.View>
        </ListView>
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Add to playlist by dropping files here." IsHitTestVisible="False">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Components.Database.Sets.PlaylistItem.Count, Mode=OneWay}" Value="0">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Popup PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=Window}}" 
              Placement="Center" 
              AllowsTransparency="True" 
              IsOpen="{Binding Source={StaticResource ViewModel}, Path=SettingsVisible}" 
              StaysOpen="False">
            <Border Background="{DynamicResource NormalBrush}" 
                    BorderBrush="{DynamicResource NormalBorderBrush}" 
                    BorderThickness="1" 
                    CornerRadius="8,8,3,3" 
                    Padding="10">
                <Windows:PlaylistSettingsDialog></Windows:PlaylistSettingsDialog>
            </Border>
        </Popup>
    </Grid>
</UserControl>
