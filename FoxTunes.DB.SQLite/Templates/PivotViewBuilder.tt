<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

SELECT
<# 
foreach (var keyColumn in this.KeyColumns) 
{ 
#>
<#= SQLiteSyntax.Column(this.Table, keyColumn) #>,
<# 
} 
#>
<# 
{
    var index = 0;
    foreach (var value in this.Values) 
    {
        if (index > 0) { #>,<# }#>
<#= SQLiteSyntax.String(value) #> AS "Key_<#= index #>"
<# 
        foreach (var nameColumn in this.NameColumns) 
        {
            foreach (var valueColumn in this.ValueColumns) 
            { 
#>, GROUP_CONCAT
(
    CASE WHEN <#= SQLiteSyntax.Column(this.Table, nameColumn) #> = <#= SQLiteSyntax.String(value) #> 
        THEN <#= SQLiteSyntax.Column(this.Table, valueColumn) #> 
    END
) AS "Value_<#= index #>_<#= valueColumn #>"
<#
            }
        }
        index++;
    }
}
{
    var index = 0;
#> 
FROM <#= SQLiteSyntax.Identifier(this.Table) #> 
GROUP BY
<#
    foreach (var keyColumn in this.KeyColumns)
    {
        if (index > 0) { #>,<# }#>
<#= SQLiteSyntax.Column(this.Table, keyColumn) #>
<#
        index++;
    }
}
#>